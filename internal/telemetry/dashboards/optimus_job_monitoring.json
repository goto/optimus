{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 2,
  "id": 340,
  "iteration": 1682437993499,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 18,
      "panels": [],
      "title": "Panels Specific To   \"$job\" ",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "This panel also has airflow link and upstream link to the job in the tooltip.\nClick on an operator to get the Airflow Link\n\n‚ùå means this link does not work",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "links": [
            {
              "targetBlank": true,
              "title": "Airflow Link",
              "url": "https://p-godata-id-optimus-airflow.golabs.io/tree?dag_id=$job"
            },
            {
              "title": "‚¨Ü ${__data.fields.meta} Link",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${project:queryparam}\n&var-job=${__data.fields.meta}\n&var-label=All\n&orgId=1\n&theme=dark\n&${__url_time_range}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 38,
      "options": {
        "colorByField": "status",
        "colors": [
          {
            "color": "green",
            "text": "success"
          },
          {
            "color": "#F2495C",
            "text": "failed"
          },
          {
            "color": "#FADE2A",
            "text": "retried"
          },
          {
            "color": "#000000",
            "text": "schedule_delay"
          },
          {
            "color": "#8AB8FF",
            "text": "sla_definition"
          }
        ],
        "endField": "end_time",
        "experiments": {
          "enabled": true,
          "lockToExtents": true,
          "relativeXAxis": false
        },
        "labelFields": [
          "type",
          "name",
          "status"
        ],
        "showYAxis": true,
        "sortBy": "startTime",
        "sortOrder": "asc",
        "startField": "start_time",
        "textField": "name"
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select \n      opr.type , \n      opr.name, \n      meta,\n      opr.status,\n      extract( epoch from opr.start_time)*1000 as start, \n      extract( epoch from case when opr.end_time > now() then now() else opr.end_time end)  *1000 as end,\n      opr.start_time  , opr.end_time \n      from (\n  select *, REGEXP_REPLACE(name,'wait_(.*)-(.*)','\\1')  as meta , 'sensor' as type from sensor_run \n  union all \n  select *, '‚ùå' as meta,  'task' as type from task_run \n  union all \n  select *, '‚ùå' as meta , 'hook' as type  from hook_run \n) as opr join job_run as jr \non opr.job_run_id = jr.id \nwhere jr.scheduled_at = to_timestamp('$schedule_time', 'DAY DD/mm/yyyy HH24:MI:SS') and jr.job_name = '$job' \n\nunion \nselect 'delay' as type, \n      'schedule_delay' as name, \n      '‚ùå' as meta, \n      'schedule_delay' as status,\n      extract( epoch from scheduled_at)*1000 as start, \n      extract( epoch from start_time)  *1000 as end,\n      scheduled_at as start_time  , start_time as end_time \nfrom job_run \nwhere scheduled_at = to_timestamp('$schedule_time', 'DAY DD/mm/yyyy HH24:MI:SS') and job_name = '$job'\n\nunion \n\nselect 'SLA Definition' as type, \n      case when sla_definition = 0 then '' else 'SLA Definition' end as name, \n      '‚ùå' as meta, \n      'sla_definition' as status,\n      extract( epoch from scheduled_at)*1000 as start, \n      extract( epoch from scheduled_at)*1000 + sla_definition as end,\n      scheduled_at as start_time  , \n      scheduled_at + (interval '1 sec' * sla_definition) end_time \nfrom job_run \nwhere scheduled_at = to_timestamp('$schedule_time', 'DAY DD/mm/yyyy HH24:MI:SS') and job_name = '$job'",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "$job \"$schedule_time\" Job Timeline Gant",
      "transformations": [],
      "transparent": true,
      "type": "marcusolsson-gantt-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "owner"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 178
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "schedule"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 96
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "windowsize"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 108
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "labels"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 377
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 105
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "is_critical"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 82
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "üö®‚ö†Ô∏è Alerts Configured"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 501
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 43,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  project_name, window_spec ->>'WindowSize' as WindowSize , schedule->'Interval' as Schedule, owner,\n  CASE \n    WHEN labels::text LIKE '%critical%' THEN '‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è'\n    ELSE 'No'\n  END AS is_critical,\n  labels , alert \nFROM\n  job\nWHERE name = '$job' and project_name in ($project)\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Job MetaData",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "labels": false
            },
            "indexByName": {
              "alert": 5,
              "is_critical": 4,
              "labels": 6,
              "owner": 3,
              "project_name": 0,
              "schedule": 2,
              "windowsize": 1
            },
            "renameByName": {
              "alert": "üö®‚ö†Ô∏è Alerts Configured",
              "orchestrator": "",
              "windowsize": ""
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "Shows all upstreams of the selected job in project. Adhered filter:\n* project\n* job\n\nExternal Jobs Link Are not supported , unless their Optimus is configured in ENV",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "targetBlank": false,
              "title": "",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${namespace:queryparam}\n&var-project=${__data.fields.project}\n&var-job=${__data.fields.upstream}\n&var-label=All\n&orgId=1\n&theme=dark\n&${__url_time_range}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "upstream"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 186
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "schedule"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 92
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "strategy"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
        "y": 16
      },
      "id": 4,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "upstream"
          }
        ]
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_schedule_cte as (\n    select\n        id,\n        project_name,\n        name,\n        schedule::json -> 'Interval' as schedule_cron\n    from job\n),\njob_upstream_cte as (\n    select\n        job_id,\n        upstream_job_id as upstream_id,\n        upstream_job_name as upstream_name,\n        upstream_project_name, \n        case\n            when upstream_external then 'üåé external'\n            when not upstream_external then 'internal'\n        end as _type,\n        upstream_type as deduction_strategy\n    from job_upstream\n    where\n        project_name in ($project) and\n        job_name = '$job' and\n        upstream_job_name != ''\n)\n\nselect\n    ju.upstream_project_name as project,\n    ju.upstream_name as upstream,\n    js.schedule_cron as schedule,\n    ju.deduction_strategy as strategy,\n    ju._type as type \nfrom job_schedule_cte js\njoin job_upstream_cte ju\n    on js.id = ju.job_id;",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Upstream",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "Something something",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "title": "Job link",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&var-project=${__data.fields.project}\n&var-job=${__data.fields.job}\n&var-label=All\n&orgId=1\n&theme=dark\n&${__url_time_range}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "project"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 98
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "deduction_strategy"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "dwnstrm_type"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 86
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "strategy"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 83
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "type"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 64
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "schedule"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 456
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "downstream"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 243
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "labels"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 348
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 142
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "level"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 65
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 306
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "is_critical"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 93
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 15,
        "x": 9,
        "y": 16
      },
      "id": 44,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "is_critical"
          }
        ]
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH RECURSIVE downstreams AS (\n  SELECT\n    job_name,\n    project_name,\n    upstream_job_name,\n    1 AS level\n  FROM\n    job_upstream\n  WHERE\n    upstream_job_name = '$job'\n    and upstream_project_name in ($project)\n  UNION\n  ALL\n  SELECT\n    ju.job_name,\n    ju.project_name,\n    ju.upstream_job_name,\n    level + 1\n  FROM\n    job_upstream ju\n    JOIN downstreams d ON d.job_name = ju.upstream_job_name\n    and d.project_name = ju.upstream_project_name\n    and level < 5\n)\nSELECT\n  dj.job_name as job,\n  dj.project_name as project,\n  dj.level,\n  CASE\n    WHEN j.labels :: text LIKE '%critical%' THEN '‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è'\n    ELSE 'No'\n  END AS is_critical,\n  j.labels, \n  schedule->'Interval' as interval \nFROM\n  (\n    select\n      job_name,\n      project_name,\n      upstream_job_name,\n      level\n    from\n      downstreams\n    group by\n      job_name,\n      project_name,\n      upstream_job_name,\n      level\n  ) dj\n  join job j on dj.job_name = j.name\n  and dj.project_name = j.project_name\nORDER BY\n  is_critical,\n  level desc;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Downstream Direct or Indirect (5 level limit)",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "is_critical": 2,
              "job": 0,
              "labels": 4,
              "level": 3,
              "project": 1,
              "schedule_cron": 5
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "Shows the break down of job run based on duration of each operator. This panel adheres to filters:\n* project\n* job",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 72,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 2,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "targetBlank": false,
              "title": "'$job' ${__data.fields.schedule_time} time line",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\nvar-environment=$environment\n&var-project=$project\n&var-namespace=$namespace\n&var-job=$job\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1&theme=dark&viewPanel=38"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "schedule_delay"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "is_.*_stil_running"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "upstream_wait_duration"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed",
                  "seriesBy": "min"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "task_duration"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "hook_duration"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byType",
              "options": "boolean"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "points"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 35,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n  jr.job_name,\n  jr.scheduled_at,\n  EXTRACT( epoch from jr.start_time - jr.scheduled_at) as schedule_delay,\n  extract( epoch from case when now() < max(sr.end_time) then now() else max(sr.end_time) end - min(sr.start_time)) as upstream_wait_duration,\n  extract( epoch from case when now() < max(tr.end_time) then now() else max(tr.end_time) end - min(tr.start_time)) as task_duration,\n  extract( epoch from case when now() < max(hr.end_time) then now() else max(hr.end_time) end - min(hr.start_time)) as hook_duration,\n  case when now() < max(sr.end_time) then true else false end is_sensor_stil_running,\n  case when now() < max(tr.end_time) then true else false end is_task_stil_running,\n  case when now() < max(hr.end_time) then true else false end is_hook_stil_running\nfrom\n  job_run jr\n  left join sensor_run sr on jr.id = sr.job_run_id\n  left join task_run tr on jr.id = tr.job_run_id\n  left join hook_run hr on jr.id = hr.job_run_id\nwhere\n  $__timeFilter(jr.scheduled_at)\n  and job_name = '$job'\ngroup by \n  jr.job_name, \n  jr.scheduled_at, \n  jr.start_time \norder by \n  jr.scheduled_at\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Aggregate Operator Run Duration",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "Shows the pattern of job run duration based on the scheduled time. Adhered filters:\n* project\n* job",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "Duration",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            }
          },
          "links": [
            {
              "targetBlank": false,
              "title": "$job ${__data.fields.schedule_time} time line ",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&var-project=${__data.fields.project_name}\n&var-job=$job\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1\n&theme=dark\n&${__url_time_range}"
            }
          ],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "yellow"
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 33
      },
      "id": 26,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "scheduled_at",
        "xTickLabelRotation": -90,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT scheduled_at, \n        start_time,\n        status, \n        project_name,\n        sla_alert as sla_breached,\n        TO_CHAR(scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS') as schedule_time,\n        EXTRACT(epoch from case when status = 'running' then now() - start_time  else end_time - start_time end) as duration\nFROM \n  job_run\nWHERE \n  $__timeFilter(scheduled_at) \n  and \n  project_name in ($project) \n  and \n  namespace_name in ($namespace)\n  and \n  job_name = '$job'\norder by scheduled_at\nlimit 100\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Job Duration Pattern",
      "transformations": [],
      "transparent": true,
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "Shows the job statuses for each scheduled time in relation to its SLA. The filters it adheres to are:\n* project\n* job",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "fillOpacity": 85,
            "lineWidth": 0
          },
          "links": [
            {
              "targetBlank": false,
              "title": "$job ${__data.fields.schedule_time} time line ",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?var-environment=Optimus+Staging\n&var-project=All&var-namespace=All\n&var-job=$job\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1&theme=dark&viewPanel=38"
            }
          ],
          "mappings": [
            {
              "options": {
                "failed": {
                  "color": "dark-red",
                  "index": 2,
                  "text": "Failed"
                },
                "false": {
                  "color": "green",
                  "index": 4,
                  "text": "SlaPass"
                },
                "running": {
                  "color": "semi-dark-yellow",
                  "index": 1,
                  "text": "Running"
                },
                "success": {
                  "color": "semi-dark-green",
                  "index": 0,
                  "text": "Success"
                },
                "true": {
                  "color": "dark-red",
                  "index": 3,
                  "text": "SlaFail"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "scheduled_at"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 28
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Sla Definition"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 27,
      "options": {
        "colWidth": 0.45,
        "legend": {
          "displayMode": "list",
          "placement": "bottom"
        },
        "rowHeight": 0.82,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT scheduled_at, \n        case when sla_definition = 0 then float8 'Infinity' else sla_definition end as user_defined_sla, \n        sla_alert as sla,\n        status as job_state\nFROM \n  job_run\nWHERE \n  $__timeFilter(scheduled_at) \n  and \n  project_name in ($project) \n  and \n  namespace_name in ($namespace)\n  and \n  job_name = '$job'\norder by scheduled_at\nlimit 60\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "hook_run",
          "timeColumn": "time",
          "where": []
        }
      ],
      "title": "Job Run State",
      "transformations": [],
      "transparent": true,
      "type": "status-history"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 53
      },
      "id": 12,
      "panels": [],
      "title": "Grouped",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "percentage failure in the selected time window",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "fillOpacity": 83,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0,
            "scaleDistribution": {
              "type": "linear"
            }
          },
          "links": [
            {
              "title": "${__data.fields.job_name}",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?${environment:queryparam}\n&${project:queryparam}\n&${project:queryparam}\n&var-job=${__data.fields.job_name}\n&var-label=All\n&orgId=1&theme=dark"
            }
          ],
          "mappings": [],
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 0
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*_count"
            },
            "properties": [
              {
                "id": "unit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 24,
        "w": 12,
        "x": 0,
        "y": 54
      },
      "id": 22,
      "options": {
        "barRadius": 0.5,
        "barWidth": 0.47,
        "colorByField": "failure_percentage",
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "horizontal",
        "showValue": "always",
        "stacking": "none",
        "text": {
          "valueSize": 14
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        },
        "xField": "job_name",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\nSELECT  jr.job_name, \n        100 * sum(case when status = 'failed' then 1 else 0 end ) / count(*) failure_percentage,\n        sum(case when status = 'failed' then 1 else 0 end )  failure_count,\n        sum(case when status = 'success' then 1 else 0 end )  success_count,\n        count(*) total_runs_count\nFROM \n  job_run jr\njoin job_labels jl\non\n  jr.project_name = jl.project_name and\n  jr.job_name = jl.job_name\nWHERE \n  $__timeFilter(jr.scheduled_at) \n  and \n  jr.project_name in ($project) \n  and \n  jr.namespace_name in ($namespace)\n  and\n  jl.job_label in ($label)\nGROUP BY jr.job_name\nhaving 100 * sum(case when status = 'failed' then 1 else 0 end ) / count(*) > 0\nORDER BY failure_percentage  desc , failure_count desc\nlimit 20\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "worst health jobs (failure percentage)",
      "transparent": true,
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "Shows the number of resources in use. Adhered filters:\n* project\n* namespace",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "resource_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 570
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_downstream"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 127
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 54
      },
      "id": 24,
      "options": {
        "footer": {
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_sources as (\n    select\n        name as job_name,\n        unnest(sources) as resource_name\n    from job\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n),\nsplit_job_sources as (\n    select job_name, string_to_array(resource_name, '//') as split_resource_name\n    from job_sources\n),\ncleaned_job_sources as (\n    select job_name, replace(split_resource_name[2], ':', '.') as resource_name\n    from split_job_sources\n)\n\nselect\n    resource_name, count(job_name) as job_downstream\nfrom cleaned_job_sources\ngroup by resource_name\norder by job_downstream desc;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Resource Usage",
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "tTnOWCAVk"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "upstream_resource_urn"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 448
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 136
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 237
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 12,
        "y": 62
      },
      "id": 8,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "upstream_resource_urn"
          }
        ]
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "tTnOWCAVk"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\nSELECT\n  ju.project_name , ju.job_name,  ju.upstream_resource_urn\n\nFROM\n  job_upstream ju\njoin job_labels jl\non\n  ju.project_name = jl.project_name and\n  ju.job_name = jl.job_name\nWhere \n  ju.upstream_state = 'unresolved' \n  and ju.upstream_type = 'static'\n  and ju.project_name in ($project)\n  and jl.job_label in ($label)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Static Unresolved Upstreams",
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 66
      },
      "id": 46,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select sum(extract(epoch from duration)) as agg_duration, time from \n(\n  SELECT\n    -- job_run_id, name , \n    case when max(end_time) < now() then max(end_time)-min(start_time) else interval '0' end duration, \n    date_trunc('hour', min(start_time)) as time \n  FROM\n    sensor_run\n  WHERE\n    $__timeFilter(start_time)\n  Group by \n    job_run_id, name\n) as temp\nGroup by time \norder by time \n    \n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Aggrigate upstream wait time",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "targetBlank": false,
              "title": "${__data.fields.job_name} ${__data.fields.schedule_time} ",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${project:queryparam}\n&${namespace:queryparam}\n&var-job=${__data.fields.job_name}\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1&theme=dark"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "status"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 102
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 74
      },
      "id": 36,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        job.owner as owner,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\nSELECT \n  TO_CHAR(scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS') as schedule_time,\n  jr.project_name, \n  jr.job_name, \n  jr.status, \n  jl.owner,\n  now() - jr.start_time  as duration \nFROM \n  job_run jr \n  join job_labels jl on jr.job_name = jl.job_name \nWHERE \n  $__timeFilter(jr.scheduled_at) \n  and jr.project_name in ($project) \n  and jr.namespace_name in ($namespace) \n  and jr.status = 'running'\n  and jl.job_label in ($label)\norder by now() - jr.start_time desc \nlimit 10\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "top 10 longest still running jobs ",
      "transformations": [],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 9,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "log": 10,
              "type": "log"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line+area"
            }
          },
          "mappings": [],
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent"
              },
              {
                "color": "red"
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "failure_percentage"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 85
      },
      "id": 16,
      "interval": "1d",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\nSELECT \n        date(jr.scheduled_at) as time,\n        sum(case when jr.sla_alert = 'true' then 1 else 0 end ) as sla_miss_count,\n        sum(case when jr.sla_alert = 'false' then 1 else 0 end ) as sla_success_count, \n        count(*) as total_runs_count,\n        100 * sum(case when jr.sla_alert = 'true' then 1 else 0 end ) / count(*) failure_percentage\nFROM job_run jr\njoin job_labels jl\n  on\n  jr.project_name = jl.project_name \n  and\n  jr.job_name = jl.job_name\nWHERE $__timeFilter(jr.scheduled_at) \nand jr.project_name in ($project) \nand jr.namespace_name in ($namespace)  \nand jr.sla_definition > 0 \nand jl.job_label in ($label)\nGROUP BY jr.project_name,jr.namespace_name, date(jr.scheduled_at)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Group Level SLA breach percentage",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 8,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "success_percentage"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 93
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\nSELECT  date(jr.scheduled_at),\n  sum(case when jr.status = 'failed' then 1 else 0 end ) failure_count,\n  sum(case when jr.status = 'success' then 1 else 0 end ) success_count,\n  count(*) as total_runs,\n  100 * sum(case when jr.status = 'success' then 1 else 0 end ) / count(*) success_percentage,\n  100 * sum(case when jr.status = 'failed' then 1 else 0 end ) / count(*) failure_percentage\nFROM job_run jr\njoin job_labels jl\non\n  jr.project_name = jl.project_name and\n  jr.job_name = jl.job_name\nWHERE \n  $__timeFilter(scheduled_at) \n  and jr.project_name in ($project) \n  and jr.namespace_name in ($namespace)\n  and jl.job_label in ($label)\n  and ( jr.status = 'failed' or jr.status = 'success' )\nGROUP BY date(jr.scheduled_at)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "daily success percentage trend",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "targetBlank": false,
              "title": "${__data.fields.job_name} ${__data.fields.schedule_time} ",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${project:queryparam}\n&${namespace:queryparam}\n&var-job=${__data.fields.job_name}\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1&theme=dark"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "namespace_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 118
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 113
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 350
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 102
      },
      "id": 14,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "scheduled_at"
          }
        ]
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\n\nSELECT\n  TO_CHAR(jr.scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS') as schedule_time,\n  jr.project_name , jr.namespace_name , jr.job_name \nFROM\n  job_run jr\njoin job_labels jl\non\n  jr.project_name = jl.project_name and\n  jr.job_name = jl.job_name\nWHERE\n  $__timeFilter(jr.scheduled_at) \n  and jr.project_name in ($project) \n  and jr.namespace_name in ($namespace)\n  and jl.job_label in ($label)\n  and status = 'failed' \n  order by jr.scheduled_at;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Failed jobs in given time window",
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "targetBlank": false,
              "title": "${__data.fields.job_name} ${__data.fields.schedule_time} ",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${project:queryparam}\n&${namespace:queryparam}\n&var-job=${__data.fields.job_name}\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1&theme=dark"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "scheduled_at"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 175
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "sla_definition"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 113
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 119
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "namespace_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 129
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 146
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 102
      },
      "id": 6,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "sla_definition"
          }
        ]
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\nSELECT\n  TO_CHAR(jr.scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS') as schedule_time,\n  jr.project_name, jr.namespace_name, jr.job_name , jr.sla_definition\nFROM\n  job_run jr\njoin job_labels jl\non\n  jr.project_name = jl.project_name and\n  jr.job_name = jl.job_name\nWHERE\n  jr.sla_alert = 'true'\n  and jr.project_name in ($project) \n  and jr.namespace_name in ($namespace) \n  and $__timeFilter(jr.scheduled_at)\n  and jl.job_label in ($label)\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "job runs that breached SLA definitions",
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "description": "Adhere to  job_label",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "targetBlank": false,
              "title": "${__data.fields.job_name} ${__data.fields.schedule_time} ",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${project:queryparam}\n&${namespace:queryparam}\n&var-job=${__data.fields.job_name}\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1\n&theme=dark"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "status"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 73
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "project_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 103
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 19,
        "x": 0,
        "y": 110
      },
      "id": 29,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with job_labels as (\n    SELECT\n        job.name as job_name,\n        job.project_name as project_name,\n        job.owner as owner,\n        extracted_labels.value as job_label\n    FROM job, jsonb_each(job.labels) extracted_labels\n    where\n        project_name in ($project) and\n        namespace_name in ($namespace)\n)\n\n\nSELECT \n  TO_CHAR(jr.scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS') as schedule_time,\n  jr.project_name, \n  jr.job_name, \n  jr.status, \n  j.owner,\n  jr.end_time - jr.start_time as duration,\n  jl.job_label\nFROM \n  job_run jr \n  join job j on jr.project_name = j.project_name \n  and jr.job_name = j.name \n  join job_labels jl on j.name = jl.job_name\nWHERE \n  $__timeFilter(jr.scheduled_at) \n  and jr.project_name in ($project) \n  and jr.namespace_name in ($namespace) \n  and jr.status != 'running'\n  and jl.job_label in ($label)\norder by jr.end_time - jr.start_time desc \nlimit 10\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "top 10 concluded jobs by longest duration",
      "transformations": [],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "title": "",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${project:queryparam}\n&${namespace:queryparam}\n&var-job=${__data.fields.job_name}\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1\n&theme=dark"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 316
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "status"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 91
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 493
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "wait_start"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 133
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "duration"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 96
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "attemps"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 73
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "downstream_count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 109
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "sensor_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 463
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "No ‚Üì "
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 116
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "No. ‚Üìstream"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 102
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 117
      },
      "id": 40,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "duration"
          }
        ]
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with stuck_sensors as (\n  SELECT\n    TO_CHAR(jr.scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS') as schedule_time,\n    sr.name as sensor_name,\n    jr.job_name,\n    case\n      when max (sr.end_time) > now() then now() - max (sr.end_time)\n      else max(sr.end_time) - min (sr.start_time)\n    end duration,\n    --min(sr.start_time) as wait_start,\n    --case when max (sr.end_time) > now() then null else max (sr.end_time) end end_time,\n    count (*) as attemps\n  FROM\n    sensor_run sr\n    join job_run jr on sr.job_run_id = jr.id\n  WHERE\n    $__timeFilter(sr.start_time)\n    and sr.end_time < now()\n  group by\n    sr.name,\n    jr.job_name,\n    sr.job_run_id,\n    jr.scheduled_at\n  order by\n    max(sr.end_time) - min(sr.start_time) desc\n  limit\n    100\n)\nselect\n  s.*,\n  count(*) as \"No. ‚Üìstream\",\n  STRING_AGG(ju.job_name, ' , ') AS \"‚Üìstreams\"\nfrom\n  stuck_sensors s\n  join job_upstream ju on ju.upstream_job_name = s.job_name\ngroup by\n  s.sensor_name,\n  s.job_name,\n  s.schedule_time,\n  s.duration,\n  s.attemps\norder by   s.duration desc, \"No. ‚Üìstream\" desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Longest wait times (Concluded Runs)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${environment}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true,
            "inspect": true
          },
          "links": [
            {
              "title": "",
              "url": "d/BgtXgCA4z/any-optimus-job-monitoring-end-user-playground?\n${environment:queryparam}\n&${project:queryparam}\n&${namespace:queryparam}\n&${__url_time_range}\n&var-job=${__data.fields.job_name}\n&var-label=All\n&var-schedule_time=${__data.fields.schedule_time}\n&orgId=1\n&theme=dark"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 316
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "status"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 69
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "job_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 407
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "wait_start"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 133
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "scheduled_at"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 181
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "attemps"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 89
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "sensor_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 357
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 125
      },
      "id": 41,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "attemps"
          }
        ]
      },
      "pluginVersion": "8.5.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${environment}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  sr.name as sensor_name,\n  jr.job_name,\n  TO_CHAR(jr.scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS') as schedule_time,\n  count (*) as attemps,\n  min(sr.start_time) as wait_start,\n  now() - min (sr.start_time) as running_since\nFROM \n  sensor_run sr join job_run jr on \n  sr.job_run_id = jr.id\nWHERE \n  $__timeFilter(sr.start_time) \n  and sr.end_time > now() \n\ngroup by sr.name,  jr.job_name, sr.job_run_id ,jr.scheduled_at\norder by count (*) desc\nlimit 200\n\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Longest wait times (Still ~Runing~) (Not Concluded)",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Optimus Production Replica",
          "value": "Optimus Production Replica"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "environment",
        "options": [],
        "query": "postgres",
        "queryValue": "",
        "refresh": 1,
        "regex": ".*Optimus*.*",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "p-godata-id"
          ],
          "value": [
            "p-godata-id"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "${environment}"
        },
        "definition": "select name from project;",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "project",
        "options": [],
        "query": "select name from project;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "gojek_dwh"
          ],
          "value": [
            "gojek_dwh"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "${environment}"
        },
        "definition": "select name from namespace where project_name in ($project)",
        "description": "optimus namespace name ",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "namespace",
        "options": [],
        "query": "select name from namespace where project_name in ($project)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "${environment}"
        },
        "definition": "SELECT distinct(stuff.value) result  FROM job, jsonb_each(job.labels) stuff where project_name in ($project) and namespace_name in ($namespace);",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "label",
        "options": [],
        "query": "SELECT distinct(stuff.value) result  FROM job, jsonb_each(job.labels) stuff where project_name in ($project) and namespace_name in ($namespace);",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "data-gojek-id-mart.merchant_platform.summary_merchant_platform_analytic_daily",
          "value": "data-gojek-id-mart.merchant_platform.summary_merchant_platform_analytic_daily"
        },
        "datasource": {
          "type": "postgres",
          "uid": "${environment}"
        },
        "definition": "select name from job where project_name in ($project) and namespace_name in ($namespace)",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "job",
        "options": [],
        "query": "select name from job where project_name in ($project) and namespace_name in ($namespace)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "MONDAY    24/04/2023 22:00:00",
          "value": "MONDAY    24/04/2023 22:00:00"
        },
        "datasource": {
          "type": "postgres",
          "uid": "${environment}"
        },
        "definition": "select TO_CHAR(scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS')  from job_run where job_name='$job' and   $__timeFilter(scheduled_at) order by scheduled_at ",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "schedule_time",
        "options": [],
        "query": "select TO_CHAR(scheduled_at, 'DAY DD/mm/yyyy HH24:MI:SS')  from job_run where job_name='$job' and   $__timeFilter(scheduled_at) order by scheduled_at ",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "utc",
  "title": "Optimus Job Monitoring  End User ( Interactive )",
  "uid": "BgtXgCA4z",
  "version": 458,
  "weekStart": ""
}